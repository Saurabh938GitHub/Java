-- to format code in eclipse, Ctrl+Shift+F
-- debug: set toggle brakpoint using right click, execute as debug as, use step over(f6) to move to next step and step in to go into method
-- string parse: set toggle where getting string, and then right click and go to watch option
-- find scroll amount of page: in console, write window.scrollby and hit enter
-- scroll inside a table: go to console, use document.querrySelector(idetifier of table).srollTop=500 (or scrollLeft)
-- to move to a praticular row in table-- (table css) tr:nth-child(4)
-- to move to a praticular cell in table-- (table css) td:nth-child(4)
-- to add Cntrl+Enter-- String s=Keys.chord(Keys.CONTROL,Keys.ENTER);
-- hard assert-- Assert.assertTrue(),Assert.assertFalse(),Assert.assertEquals()
-- soft assert(verify)-- SoftAssert a= new SoftAssert(); a.assertTrue(); a.assertAll(); (to log all failed scenario after whole execution)
-- which plugin is used by Maven to execute test cases: Maven SureFire plugin
-- mvn clean: cleans the project
-- mvn complie: it checks for any syntax/compilation error in Maven project
-- mvn test: its triggers the test execution
-- how to execute testNG xml file using maven
   under build_configuration tag, provide name of testNG xml, then go to root directory where pom.xml is there, type cmd, then go to cmd and hit: mvn test 
-- how to switch between different xmls of testNG using maven
   lets suppose we have 3 testNG xmls, for some, sanity and regression...and we want to switch between then as per testing demand
   then it is not good practise to go to pom.xml and change build_configuration everytime
   so to overcome this, we use profiling..where we would create one profile each for smoke, sanity and regression
   and under that profile, we will mention testNG xmls
   and switch between profiles as per our testing need
   mvn test -Pregression
-- how to get dynamic path: System.getProperty("user.dir")--this will return the base of current working directory and then we can mention like this-- System.getProperty("user.dir")+"\\src\\main\\java\\resources\\data.properties"
-- headless execution on Chrome: 
   ChromeOptions options= new ChromeOptions();
   options.addArguments("headless");
   driver =new ChromeDriver(options);
-- how to pass global parameter with maven, like browser type
   mvn test-Dbrowser=chrome
